@model SiliconIndy.Models.LessonModels.LessonCreate

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Add A New Lesson</h2>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger", @rows = 3 })
                    </div>
                </div>

                @for (int i = 0; i < Model.CheckBoxItems.Count; i++)
                {
                    @Html.DisplayFor(m => m.CheckBoxItems[i].LessonType);
                    @Html.CheckBoxFor(m => m.CheckBoxItems[i].IsSelected);
                    @Html.HiddenFor(m => m.CheckBoxItems[i].LessonType);
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
</div>


<script>
    var editor = CodeMirror.fromTextArea(document.getElementById("code1-ex2"), {
        lineNumbers: true,
        mode: "text/x-csharp",
        matchBrackets: true
    });
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
